import cv2
from src.utils import detect_objects, apply_nms

def filter_text_boxes(text_boxes):
    """
    L·ªçc b·ªè c√°c v√πng kh√¥ng c·∫ßn thi·∫øt (c√°c title nh∆∞ 'id_title', 'name_title', 'birth_title').
    Ch·ªâ gi·ªØ l·∫°i 'id', 'name', 'birth'.

    Args:
        text_boxes (dict): Dictionary ch·ª©a bbox v√† labels.

    Returns:
        dict: Dictionary ch·ª©a bbox c·ªßa c√°c v√πng ch·ª©a text c·∫ßn thi·∫øt.
    """
    valid_labels = {"id", "name", "birth"}
    filtered_boxes = {label: coords for label, coords in text_boxes.items() if label in valid_labels}

    print("[INFO] Filtered text fields:", filtered_boxes)
    return filtered_boxes

def detect_text_regions(text_detector, image, iou_threshold=0.5):
    """
    Nh·∫≠n di·ªán c√°c v√πng ch·ª©a vƒÉn b·∫£n tr√™n ·∫£nh CCCD b·∫±ng YOLO.

    Args:
        image_path (str): ƒê∆∞·ªùng d·∫´n ·∫£nh CCCD.
        iou_threshold (float): Ng∆∞·ª°ng NMS.

    Returns:
        dict: Dictionary ch·ª©a t·ªça ƒë·ªô bbox c·ªßa c√°c v√πng text.
    """
    print(f"[INFO] Loading image...")
    if image is None:
        print("‚ùå [ERROR] Kh√¥ng th·ªÉ load ·∫£nh!")
        return None

    print("[INFO] Running YOLO model for text detection...")

    # üü¢ G·ªçi `detect_objects()` t·ª´ `utils.py` ƒë·ªÉ l·∫•y danh s√°ch bbox, confidence, label
    raw_detections = detect_objects(image, text_detector)

    if not raw_detections:
        print("‚ùå [ERROR] Kh√¥ng t√¨m th·∫•y v√πng ch·ª©a vƒÉn b·∫£n!")
        return None

    print("[INFO] Raw detected text regions:", raw_detections)

    # üü¢ √Åp d·ª•ng NMS ƒë·ªÉ l·ªçc bbox tr√πng l·∫∑p
    filtered_text_boxes = apply_nms(raw_detections, iou_threshold)

    # üü¢ L·ªçc b·ªè c√°c class title nh∆∞ 'id_title', 'name_title'
    return filter_text_boxes(filtered_text_boxes)
